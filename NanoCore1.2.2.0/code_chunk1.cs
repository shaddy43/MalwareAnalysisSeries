private void HandleRawInput(IntPtr hRawInput)
    {
        RAWINPUT input = new RAWINPUT();
        uint size = (uint)Marshal.SizeOf(typeof(RAWINPUT));

        if (GetRawInputData(hRawInput, RID_INPUT, IntPtr.Zero, ref size, (uint)Marshal.SizeOf(typeof(RAWINPUTHEADER))) != -1)
        {
            IntPtr buffer = Marshal.AllocHGlobal((int)size);
            if (GetRawInputData(hRawInput, RID_INPUT, buffer, ref size, (uint)Marshal.SizeOf(typeof(RAWINPUTHEADER))) == size)
            {
                input = (RAWINPUT)Marshal.PtrToStructure(buffer, typeof(RAWINPUT));
                if (input.header.dwType == INPUT_KEYBOARD && (input.keyboard.Flags & 1) == 0) // Only when a key is pressed down
                {
                    LogKey(input.keyboard.VKey);
                }
            }
            Marshal.FreeHGlobal(buffer);
        }
    }